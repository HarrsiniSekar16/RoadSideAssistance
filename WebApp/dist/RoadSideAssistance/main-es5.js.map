{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app-service.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth-guard.service.ts","webpack:///src/app/encrypt-service.service.ts","webpack:///src/app/layout/find-vendor/find-vendor.component.ts","webpack:///src/app/layout/find-vendor/find-vendor.component.html","webpack:///src/app/layout/layout.component.ts","webpack:///src/app/layout/layout.component.html","webpack:///src/app/layout/layout.module.ts","webpack:///src/app/layout/layout.routing.ts","webpack:///src/app/layout/profile/profile.component.ts","webpack:///src/app/layout/profile/profile.component.html","webpack:///src/app/layout/request-vendor/request-vendor.component.ts","webpack:///src/app/layout/request-vendor/request-vendor.component.html","webpack:///src/app/layout/user-request/user-request.component.ts","webpack:///src/app/layout/user-request/user-request.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/shared/material-module.ts","webpack:///src/app/shared/user-service.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","loadChildren","canActivate","component","redirectTo","AppRoutingModule","forRoot","imports","AppServiceService","http","param","url_map","services","filter","x","url","api_url","forEach","urlparam","geturl","get","body","post","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AuthGuard","router","userService","route","checkUser","validUserType","data","expectedRole","undefined","userData","getUser","userType","navigate","isExpired","helper","t","JSON","parse","sessionStorage","getItem","isTokenExpired","token","providedIn","EncryptServiceService","value","encrypted","encrypt","toString","decrypted","decrypt","Utf8","FindVendorComponent","icon","switcher","navigator","geolocation","getCurrentPosition","position","showPosition","coordinates","latitude","longitude","company","lat","coords","marker","console","log","emit","LayoutComponent","_routes","Appservice","opened","Nav","displayName","removeItem","LayoutModule","withConfig","useColumnBasisZero","apiKey","children","LayoutRoutingModule","forChild","ProfileComponent","RequestVendorComponent","appService","btndisabled","requestForm","vehicleNumber","vehicleRegNumber","description","message","vin","length","getExternal","subscribe","vinData","Results","y","Variable","Value","UserRequestComponent","_httpClient","appservice","displayedColumns","resultsLength","isLoadingResults","isRateLimitReached","exampleDatabase","ExampleHttpDatabase","sort","sortChange","paginator","pageIndex","page","pipe","getRequest","active","direction","total_count","items","order","LoginComponent","EncrDecr","user","loginForm","userEmail","userPassword","params","push","set","val","auth","setItem","stringify","authenticate","modules","MaterialModule","UserServiceService","encdec","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { AuthGuard} from './auth-guard.service'\nimport { LayoutModule } from './layout/layout.module'\n\nconst routes: Routes = [\n  {path: 'layout', loadChildren: () => LayoutModule, canActivate: [AuthGuard]},\n  {path: 'login', component: LoginComponent},\n  {path: '**', redirectTo: 'login'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { environment } from '../environments/environment';\nimport { HttpClient} from '@angular/common/http';\n\nimport {Observable} from 'rxjs';\n@Injectable()\nexport class AppServiceService {\n\n\n  constructor(private http: HttpClient) {\n  }\n\n  geturl(path: string, param: any[]) {\n\n    let url_map = environment.services.filter(x => x.code == path);\n\n    let url = environment.api_url + url_map[0].url;\n\n    param.forEach(x => {\n      url = url + \"/\" + x;\n    });\n\n    return url;\n  }\n\n  get<T>(url: string, param?: any[]) : Observable<any> {\n\n    let urlparam = this.geturl(url, param);\n\n    return this.http.get<T>(urlparam);\n  }\n  \n  post<T>(url: string, body: any, param?:any[]) : Observable<any>{\n    \n    let urlparam = this.geturl(url, param);\n    // generic type of response\n    return this.http.post<T>(urlparam,body);\n  }\n\n  getExternal<T>(url): Observable<any>{\n    return this.http.get(url);\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'RoadSideAssistance';\n}\n","<router-outlet>\n\n</router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { MaterialModule } from './shared/material-module';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppServiceService } from './app-service.service';\n// for the service to be available across the project\nimport { HttpClientModule } from '@angular/common/http'; \nimport { ReactiveFormsModule } from '@angular/forms';\nimport {EncryptServiceService} from '../app/encrypt-service.service';\nimport { UserServiceService } from './shared/user-service.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    // importing the common module material for angular material usage\n    MaterialModule,\n    FlexLayoutModule,\n    BrowserAnimationsModule,\n    HttpClientModule\n    ],\n  providers: [AppServiceService, EncryptServiceService, UserServiceService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { IResponse } from '../app/interface/IResponse';\nimport { UserServiceService } from './shared/user-service.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n    \n    constructor(private router: Router, private userService: UserServiceService) { }\n    canActivate(route : ActivatedRouteSnapshot) {\n        let checkUser: Boolean = true;\n            const validUserType = route.data.expectedRole;\n            if(validUserType != undefined){\n                let userData = this.userService.getUser();\n                if(userData?.userType != validUserType){\n                    checkUser = false;\n                    if(checkUser ==  false){\n                        this.router.navigate(['/layout/Profile'])\n                        return false;\n                    }\n                }    \n            }\n        if (this.isExpired() == false && checkUser) {\n            return true;\n        } else {\n            this.router.navigate(['/login'])\n            return false;\n        }\n    }\n    isExpired() {\n        const helper = new JwtHelperService();\n        let t: IResponse = JSON.parse(sessionStorage.getItem('jwt_token'));\n        if (t != null) {\n            return helper.isTokenExpired(t.token);\n        }\n        else {\n            return true;\n        }\n    }\n    \n}\n","import { Injectable } from '@angular/core';\nimport * as CryptoJS from 'crypto-js';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EncryptServiceService {\n\n  constructor() { }\n\n  set(keys, value){\n    var encrypted = CryptoJS.AES.encrypt(value.toString(), keys.toString());\n    return encrypted.toString();\n  }\n\n  get(keys,value){\n    var decrypted = CryptoJS.AES.decrypt(value.toString(), keys.toString());\n    return decrypted.toString(CryptoJS.enc.Utf8);\n  }\n\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-find-vendor',\n  templateUrl: './find-vendor.component.html',\n  styleUrls: ['./find-vendor.component.scss']\n})\nexport class FindVendorComponent implements OnInit {\n  lat: string;\n  long: string;\n  icon : string = 'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|4286f4';\n  constructor() { }\n  coordinates :any[];\n  @Output() switcher = new EventEmitter<string>();\n\n  ngOnInit(): void {\n    navigator.geolocation.getCurrentPosition((position) => {\n      this.showPosition(position);\n    });\n    this.coordinates = [\n      {\n        latitude : \"42.3371621\"\n        , longitude : \"-71.1059823\",\n        company : 'XYZ Mech'\n      }\n    ]\n  }\n  showPosition(position) {\n    this.lat = position.coords.latitude;\n    this.long = position.coords.longitude;\n  } \n\n  markerClicked(marker){\n    console.log(marker.company);\n  }\n  emit(){\n    this.switcher.emit();\n  }\n}\n","<div fxLayout=\"row\">\n    <div fxFlex=\"50%\">\n        <mat-form-field fxLayoutAlign=\"center center\">\n            <input type=\"text\" matInput placeholder=\"Address\">\n        </mat-form-field>\n    </div>\n    <div class=\"map\" fxFlex=\"50%\">\n        <agm-map [latitude]=\"lat\" [zoom]=\"15\" [longitude]=\"long\">\n            <agm-marker [iconUrl]=\"icon\" [latitude]=\"lat\" [longitude]=\"long\">\n            </agm-marker>\n            <agm-marker *ngFor=\"let marker of coordinates;\" [latitude]=\"marker.latitude\" [longitude]=\"marker.longitude\" [markerClickable]=\"true\" (markerClick)=\"markerClicked(marker)\">\n            </agm-marker>\n        </agm-map>\n    </div>\n</div>\n<br>\n<div fxLayout=\"row\">\n    <div fxFlex=\"50%\" fxLayoutAlign=\"center center\">\n        <button (click)=\"emit()\" mat-button>\n            Back\n        </button>\n    </div>\n    <div fxFlex=\"50%\" fxLayoutAlign=\"center center\">\n        <button mat-button>\n            Request\n        </button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AppServiceService } from '../app-service.service';\nimport { UserServiceService } from '../shared/user-service.service';\nimport { Iuser } from '../interface/IResponse';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutComponent implements OnInit {\n  opened: boolean = false;\n  Nav:any[];\n  userType : any;\n  constructor(private _routes: Router, private Appservice : AppServiceService, private userService : UserServiceService) { \n    this.userType == this.userService.getUser().userType;\n    console.log(this.userType);\n  }\n  ngOnInit(): void {\n    this.Nav = [\n      { icon: 'commute', displayName : 'Request Repair', route : 'RequestVendor', data: 'user'},\n      { icon: 'commute', displayName : 'Requests', route : 'UserRequestComponent', data: 'vendor'},\n      { icon: 'account_circle', displayName : 'Profile', route : 'Profile', data: 'general'},\n      { icon:'power_settings_new', displayName : 'Logout', route : 'logout', data: 'general'} ]\n  } \n \n  getURL(param : any):void{\n    this.opened = ! this.opened;\n    if(param.route == \"logout\"){\n      sessionStorage.removeItem('jwt_token');\n      sessionStorage.removeItem('auth');\n      this._routes.navigate(['/login']);\n    }else{\n      this._routes.navigate([\"/layout/\" + param.route]);\n    }\n  }\n}\n","<mat-sidenav-container class=\"example-container\">\n    <mat-sidenav fixedInViewport=\"true\" class=\"navside\" mode=\"push\" [(opened)]=\"opened\" role=\"navigation\">\n        <img style=\"height: 8vh;border-radius: 60%\" [src]=\"\">\n        <mat-nav-list>\n\n            <a mat-list-item (click)=\"getURL(this.nav)\" *ngFor=\"let nav of Nav\">\n                   <mat-icon >{{nav.icon}}</mat-icon> &nbsp; {{nav.displayName}}\n            </a>\n        </mat-nav-list>\n        <!-- img for the profile picture -->\n    </mat-sidenav>\n    <mat-sidenav-content>\n        <mat-toolbar class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\">\n            <div fxLayoutAlign=\"left center\" fxFlex=\"10%\">\n                <button (click)=\"opened = !opened\" mat-icon-button>\n                <mat-icon>menu</mat-icon>\n            </button>\n            </div>\n            <div fxLayoutAlign=\"center center\" fxFlex=\"80%\" class=\"navbar\">\n\n                Road Side Assistance\n            </div>\n            <div fxLayoutAlign=\"center\" fxFlex=\"10%\"></div>\n        </mat-toolbar>\n        <router-outlet></router-outlet>\n    </mat-sidenav-content>\n</mat-sidenav-container>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LayoutComponent } from './layout.component';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { MaterialModule } from '../shared/material-module';\nimport { LayoutRoutingModule } from './layout.routing';\nimport { ProfileComponent } from './profile/profile.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppServiceService } from '../app-service.service';\nimport {AgmCoreModule} from '@agm/core';\nimport { RequestVendorComponent } from './request-vendor/request-vendor.component'\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FindVendorComponent } from './find-vendor/find-vendor.component';\nimport { UserRequestComponent } from './user-request/user-request.component';\n\n@NgModule({\n  declarations: [LayoutComponent, ProfileComponent, RequestVendorComponent, FindVendorComponent, UserRequestComponent],\n  imports: [\n    CommonModule, MaterialModule,LayoutRoutingModule,ReactiveFormsModule,\n    FlexLayoutModule.withConfig({useColumnBasisZero: false}), HttpClientModule,FormsModule,\n    AgmCoreModule.forRoot({\n      apiKey : 'AIzaSyCNH7ZuXjNdXqZFzlpOB0snpBZjoUC5jRo'\n    })\n  ],\n  providers:[AppServiceService]\n})\nexport class LayoutModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LayoutComponent } from './layout.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { RequestVendorComponent } from './request-vendor/request-vendor.component';\nimport { AuthGuard } from '../auth-guard.service';\nimport { UserRequestComponent } from './user-request/user-request.component';\n\nconst routes: Routes = [\n    {\n      path:'',\n      component:LayoutComponent,\n      children:[\n        {path: 'Profile', component: ProfileComponent},\n        {path: 'RequestVendor', component: RequestVendorComponent,canActivate: [AuthGuard], data:{expectedRole : 'user'}},\n        {path: 'UserRequestComponent', component: UserRequestComponent,canActivate: [AuthGuard], data:{expectedRole : 'vendor'}},\n        {path: '**', redirectTo:'Profile'}\n      ],\n    },\n ];\n\n @NgModule({\n    imports: [\n      RouterModule.forChild(routes)\n    ],\n    exports: [RouterModule]\n  })\n\nexport class LayoutRoutingModule { }","import { Component, OnInit } from '@angular/core';\nimport { UserServiceService } from 'src/app/shared/user-service.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n  constructor(private userService : UserServiceService) {\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<p>profile works!</p>","import { Component, OnInit } from '@angular/core';\nimport { AppServiceService } from 'src/app/app-service.service';\nimport { FormGroup, FormControl } from '@angular/forms';\n\n// https://vingenerator.org/\n// https://vpic.nhtsa.dot.gov/api/vehicles/decodevin/5XYKT3A17BG157871?format=json\n@Component({\n  selector: 'app-request-vendor',\n  templateUrl: './request-vendor.component.html',\n  styleUrls: ['./request-vendor.component.scss']\n})\nexport class RequestVendorComponent implements OnInit {\n  btndisabled : boolean = true;\n  vinData : any[];\n  switch : boolean = false;\n  constructor(private appService: AppServiceService) { }\n  switcher : any;\n  requestForm = new FormGroup({\n    vehicleNumber: new FormControl(''),\n    vehicleRegNumber: new FormControl(''),\n    description : new FormControl(''),\n    message : new FormControl('')\n  });\n\n  ngOnInit(): void {   \n  }\n\n  checkInput(){\n    let vin = this.requestForm?.get('vehicleNumber')?.value;\n    if(vin?.length == 17){\n      this.appService.getExternal(\"https://vpic.nhtsa.dot.gov/api/vehicles/decodevin/\" + vin +\"?format=json\").subscribe(\n         x=>{\n          this.vinData = x.Results.filter(y=> {\n            if((y.Variable == \"Make\" ||y.Variable == \"Manufacturer Name\"|| y.Variable == \"Model\"  ||y.Variable == \"Engine Model\") && y.Value != null) {\n              return y;\n            }\n          })\n          if(this.vinData.length > 1){\n            this.btndisabled = false;\n          }\n         }          \n      );\n    }else{\n      this.btndisabled = true;\n    }\n  }\n  findMechanic(){\n    this.switch = true;\n  }\n  outputemit(x : string){\n    this.switch = false;\n  }\n}\n","<form *ngIf=\"switch == false\" [formGroup]=\"requestForm\" (ngSubmit)=\"findMechanic()\">\n    <div fxLayout=\"column\">\n        <div fxLayout=\"row\">\n            <div fxFlex=\"100%\">\n                <mat-form-field fxLayoutAlign=\"center\">\n                    <input type=\"text\" (ngModelChange)=\"checkInput()\" matInput formControlName=\"vehicleNumber\" maxlength=\"17\" placeholder=\"Vehicle Identification Number\">\n                </mat-form-field>\n            </div>\n        </div>\n        <div fxLayout=\"row\">\n            <div fxFlex=\"100%\">\n                <mat-form-field fxLayoutAlign=\"center\">\n                    <input type=\"text\" matInput formControlName=\"vehicleRegNumber\" placeholder=\"Registration Number\">\n                </mat-form-field>\n            </div>\n        </div>\n        <div fxLayout=\"row\">\n            <div fxFlex=\"100%\">\n                <mat-form-field fxLayoutAlign=\"center center\">\n                    <textarea matInput cdkTextareaAutosize formControlName=\"description\" placeholder=\"Description\">\n                 </textarea>\n                </mat-form-field>\n            </div>\n        </div>\n        <div fxLayout=\"row\">\n            <div fxFlex=\"100%\">\n                <mat-form-field fxLayoutAlign=\"center center\">\n                    <textarea matInput cdkTextareaAutosize formControlName=\"message\" placeholder=\"Message to Mechanic\">\n                 </textarea>\n                </mat-form-field>\n            </div>\n        </div>\n        <div fxLayout=\"row\">\n            <div fxFlex=\"100%\" fxLayoutAlign=\"center center\">\n                <mat-file-upload [allowMultipleFiles]=\"false\" [labelText]=\"'Select a file to upload:'\"></mat-file-upload>\n            </div>\n        </div>\n        <br>\n        <div fxLayout=\"row\">\n            <div fxFlex=\"100%\">\n                <div fxLayoutAlign=\"center\">\n                    <button type=\"submit\" [disabled]=\"btndisabled\" mat-button>Find Mechanic</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>\n\n<app-find-vendor *ngIf=\"switch == true\" (switcher)=\"outputemit($event)\">\n</app-find-vendor>","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport { IUserRequest } from '../../interface/IResponse';\nimport { AppServiceService } from 'src/app/app-service.service';\nimport {merge, Observable, of as observableOf} from 'rxjs';\nimport {catchError, map, startWith, switchMap} from 'rxjs/operators';\nimport { DataSource } from '@angular/cdk/table';\n\n\n@Component({\n  selector: 'app-user-request',\n  templateUrl: './user-request.component.html',\n  styleUrls: ['./user-request.component.scss']\n})\nexport class UserRequestComponent implements AfterViewInit {\n\n  displayedColumns: string[] = ['created', 'state', 'number', 'title'];\n  exampleDatabase: ExampleHttpDatabase | null;\n  data: IUserRequest[] = [];\n\n  constructor(private _httpClient: HttpClient, private appservice: AppServiceService,) { }\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  resultsLength = 0;\n  isLoadingResults : boolean = true;\n  isRateLimitReached = false;\n\n  ngAfterViewInit() {\n    this.exampleDatabase = new ExampleHttpDatabase(this._httpClient,this.appservice);\n\n    // If the user changes the sort order, reset back to the first page.\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n\n    merge(this.sort.sortChange, this.paginator.page)\n      .pipe(\n        startWith({}),\n        switchMap(() => {\n          this.isLoadingResults = true;\n          return this.exampleDatabase!.getRequest(\n            this.sort.active, this.sort.direction, this.paginator.pageIndex);\n        }),\n        map(x => {\n          // Flip flag to show that loading has finished.\n          this.isLoadingResults = false;\n          this.isRateLimitReached = false;\n          this.resultsLength = x.total_count;\n\n          return x.items;\n        }),\n        catchError(() => {\n          this.isLoadingResults = false;\n          // Catch if the GitHub API has reached its rate limit. Return empty data.\n          this.isRateLimitReached = true;\n          return observableOf([]);\n        })\n      ).subscribe(x => this.data = x);\n  }\n  }\n\n  export interface api {\n    items: IUserRequest[];\n    total_count: number;\n  }\n  \n\n/** An example database that the data source uses to retrieve data for the table. */\nexport class ExampleHttpDatabase {\n  data: IUserRequest;\n  constructor(private http: HttpClient, private appservice: AppServiceService,) {}\n\n  getRequest(sort: string, order: string, page: number):Observable<api>{\n    let t;\n    this.http.get<IUserRequest>('US-VE').subscribe(x=>{\n      t = x;\n    });\n    return t;\n}\n}","<div class=\"example-container mat-elevation-z8\">\n  <div class=\"example-loading-shade\"\n       *ngIf=\"isLoadingResults || isRateLimitReached\">\n    <mat-spinner *ngIf=\"isLoadingResults\"></mat-spinner>\n  </div>\n\n<div class=\"example-table-container\">\n\n    <table mat-table [dataSource]=\"data\" class=\"example-table\"\n           matSort matSortActive=\"created\" matSortDisableClear matSortDirection=\"desc\">\n      <!-- Number Column -->\n      <ng-container matColumnDef=\"number\">\n        <th mat-header-cell *matHeaderCellDef>#</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.number}}</td>\n      </ng-container>\n\n      <!-- Title Column -->\n      <ng-container matColumnDef=\"title\">\n        <th mat-header-cell *matHeaderCellDef>Title</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.title}}</td>\n      </ng-container>\n\n      <!-- State Column -->\n      <ng-container matColumnDef=\"state\">\n        <th mat-header-cell *matHeaderCellDef>State</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.state}}</td>\n      </ng-container>\n\n      <!-- Created Column -->\n      <ng-container matColumnDef=\"created\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header disableClear>\n          Created\n        </th>\n        <td mat-cell *matCellDef=\"let row\">{{row.created_at | date}}</td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n  </div>\n\n  <mat-paginator [length]=\"resultsLength\" [pageSize]=\"30\"></mat-paginator>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AppServiceService } from '../app-service.service';\nimport { IResponse } from '../interface/IResponse';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { EncryptServiceService } from '../../app/encrypt-service.service';\nimport { UserServiceService } from '../shared/user-service.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private _routes: Router,\n    private appservice: AppServiceService,\n    private EncrDecr: EncryptServiceService,\n    private user: UserServiceService\n    ) { }\n\n  loginForm = new FormGroup({\n    userEmail: new FormControl(''),\n    userPassword: new FormControl(''),\n  });\n\n  ngOnInit(): void {\n    sessionStorage.removeItem('jwt_token');\n    sessionStorage.removeItem('auth');\n  }\n\n  authenticate() {\n    let params = [];\n    params.push(this.loginForm.get('userEmail').value);\n    let body = {\n      userPassword: this.EncrDecr.set('123456$#@$^@1ERF', this.loginForm.get('userPassword').value)\n    }\n    // authenticate the user and let him login\n    const val = this.appservice.post<IResponse>('US-AU', body, params).subscribe(x => {\n      if (x.auth == true) {\n        sessionStorage.setItem(\"auth\", this.EncrDecr.set('123456$#@$^@1ERF',JSON.stringify(x.user)));\n        delete x.user\n        sessionStorage.setItem(\"jwt_token\", JSON.stringify(x));\n        this._routes.navigate(['/layout']);\n      }\n    });\n  }\n}\n","<!-- example for column wise arrangement using fxlayout -->\n<mat-toolbar fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center\">\n    <div fxLayoutAlign=\"center\" fxFlex=\"10%\"></div>\n    <div fxLayoutAlign=\"center center\" fxFlex=\"80%\" class=\"header\"> Road Side Assistance</div>\n    <div fxLayoutAlign=\"center\" fxFlex=\"10%\"></div>\n</mat-toolbar>\n<br>\n\n<!-- reference for fx layout -->\n<!-- https://github.com/angular/flex-layout/wiki/fxLayoutGap-API -->\n\n\n<!-- example for row wise fx -->\n<div fxLayout=\"column\">\n    <mat-card>\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"authenticate()\">\n            <div fxLayoutAlign=\"center\">\n                <mat-card-title> Login</mat-card-title>\n            </div>\n            <div fxLayoutAlign=\"center\">\n                <mat-form-field>\n                    <input type=\"text\" formControlName=\"userEmail\" matInput placeholder=\"Email ID\">\n                </mat-form-field>\n            </div>\n            <div fxLayoutAlign=\"center\">\n                <mat-form-field>\n                    <input type=\"password\" formControlName=\"userPassword\" matInput placeholder=\"Password\">\n                </mat-form-field>\n            </div>\n            <div fxLayoutAlign=\"center\"><button type=\"submit\" mat-button>Sign In</button></div>\n        </form>\n    </mat-card>\n</div>","import { NgModule } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatListModule} from '@angular/material/list';\nimport { MatFileUploadModule } from 'mat-file-upload';\nimport {WebcamModule} from 'ngx-webcam';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatPaginatorModule} from '@angular/material/paginator';\n\n\n// import the modules from the angular material using the full path as it got changed in the version 9\nconst modules = [\n    MatCardModule,\n    MatInputModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatListModule,\n    MatFileUploadModule,\n    WebcamModule,\n    MatSelectModule,\n    MatTooltipModule,\n    MatProgressSpinnerModule,\n    MatTableModule,\n    MatPaginatorModule\n];\n\n@NgModule({\n    imports: modules,\n    exports: modules,\n})\nexport class MaterialModule { }\n","import { Injectable } from '@angular/core';\nimport { Iuser } from '../interface/IResponse';\nimport { EncryptServiceService } from '../encrypt-service.service';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class UserServiceService {\n  private user : Iuser;\n  constructor(private encdec: EncryptServiceService) { }\n\n  getUser(): Iuser{\n    this.user = JSON.parse(this.encdec.get('123456$#@$^@1ERF',sessionStorage.getItem('auth')));\n    return this.user;\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  \"api_url\":\"http://localhost:3000/\",\n  \"services\":[\n    //UserAuthentication\n    {code:\"US-AU\",url:\"User\"},\n    {code:\"US-VE\",url:\"Vendor\"}\n  ]\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}